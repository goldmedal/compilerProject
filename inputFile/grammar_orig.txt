S
    Program $
Program
    VarDeclList
VarDeclList
    VarDecl VarDeclList'
VarDeclList'
    epsilon
    VarDeclList
VarDecl
    Type id VarDecl'
VarDecl'
    ;
    [ num ] ;
    ( ParamDeclList ) Block
ParamDeclList
    ParamDeclListTail
    epsilon
ParamDeclListTail
    ParamDecl ParamDeclListTail'
ParamDeclListTail'
    epsilon
    , ParamDeclListTail
ParamDecl
    Type id ParamDecl'
ParamDecl'
    epsilon
    [ ]
Block
    { Block'
Block'
    VarDeclList StmtList }
    StmtList }
Type
    int
    char
StmtList
    Stmt StmtList'
StmtList'
    epsilon
    StmtList
Stmt
    ;
    Expr ;
    return Expr ;
    break ;
    if ( Expr ) Stmt else Stmt
    while ( Expr ) Stmt
    Block
Expr
    num Expr'
    ( Expr ) Expr'
    UnaryOp Expr Expr'
    id Primary Expr'
Expr'
    epsilon
    BinOp Expr Expr'
Primary
    epsilon
    ( ExprList )
    [ Expr ] Primary'
    = Expr
Primary'
    epsilon
    = Expr
ExprList
    ExprListTail
    epsilon
ExprListTail
    Expr ExprListTail'
ExprListTail'
    epsilon
    , ExprListTail
UnaryOp
    -
    !
BinOp
    +
    -
    *
    /
    ==
    !=
    <
    <=
    >
    >=
    &&
    ||
